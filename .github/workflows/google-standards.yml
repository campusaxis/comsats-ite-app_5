name: Google Standards Compliance CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: Code Quality & Standards
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: TypeScript type checking
      run: npx tsc --noEmit

    - name: ESLint code quality
      run: npx eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 0

    - name: Prettier code formatting
      run: npx prettier --check .

    - name: Build application
      run: npm run build
      env:
        ANALYZE: true

    - name: Bundle size analysis
      run: |
        npm install -g bundlesize
        bundlesize

  accessibility:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application
      run: npm start &
      
    - name: Wait for application to be ready
      run: npx wait-on http://localhost:3000

    - name: Run accessibility tests
      run: |
        npx @axe-core/cli http://localhost:3000
        npx @axe-core/cli http://localhost:3000/faculty
        npx @axe-core/cli http://localhost:3000/past-papers
        npx @axe-core/cli http://localhost:3000/gpa-calculator

  performance:
    name: Performance & Core Web Vitals
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application
      run: npm start &
      
    - name: Wait for application to be ready
      run: npx wait-on http://localhost:3000

    - name: Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun --upload.target=temporary-public-storage
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Core Web Vitals check
      run: |
        npx lighthouse http://localhost:3000 --only-categories=performance --chrome-flags="--no-sandbox --headless" --output json --output-path lighthouse-performance.json
        node -e "
          const report = require('./lighthouse-performance.json');
          const lcp = report.audits['largest-contentful-paint'].numericValue;
          const fid = report.audits['max-potential-fid'].numericValue;
          const cls = report.audits['cumulative-layout-shift'].numericValue;
          
          console.log('Core Web Vitals Results:');
          console.log('LCP:', lcp + 'ms (target: <2500ms)');
          console.log('FID:', fid + 'ms (target: <100ms)');  
          console.log('CLS:', cls + ' (target: <0.1)');
          
          if (lcp > 2500) process.exit(1);
          if (fid > 100) process.exit(1);
          if (cls > 0.1) process.exit(1);
        "

  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Security audit
      run: npm audit --audit-level moderate

    - name: Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Build and security headers check
      run: |
        npm run build
        npm start &
        npx wait-on http://localhost:3000
        
        # Check security headers
        curl -I http://localhost:3000 | grep -i "strict-transport-security"
        curl -I http://localhost:3000 | grep -i "x-content-type-options"
        curl -I http://localhost:3000 | grep -i "x-frame-options"

  seo:
    name: SEO Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application
      run: npm start &
      
    - name: Wait for application to be ready
      run: npx wait-on http://localhost:3000

    - name: SEO audit with Lighthouse
      run: |
        npx lighthouse http://localhost:3000 --only-categories=seo --chrome-flags="--no-sandbox --headless" --output json --output-path lighthouse-seo.json
        node -e "
          const report = require('./lighthouse-seo.json');
          const seoScore = report.categories.seo.score * 100;
          console.log('SEO Score:', seoScore + '/100');
          if (seoScore < 90) {
            console.error('SEO score is below 90. Please fix SEO issues.');
            process.exit(1);
          }
        "

    - name: Validate meta tags
      run: |
        # Check for essential meta tags
        curl -s http://localhost:3000 | grep -i '<meta name="description"' || (echo "Missing meta description" && exit 1)
        curl -s http://localhost:3000 | grep -i '<meta property="og:title"' || (echo "Missing og:title" && exit 1)
        curl -s http://localhost:3000 | grep -i '<meta property="og:description"' || (echo "Missing og:description" && exit 1)

    - name: Validate structured data
      run: |
        npm install -g structured-data-testing-tool
        structured-data-testing-tool http://localhost:3000

  e2e-testing:
    name: End-to-End Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install

    - name: Build application
      run: npm run build

    - name: Run Google Standards compliance tests
      run: npx playwright test tests/google-standards.spec.ts

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30