-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  role character varying DEFAULT 'admin'::character varying CHECK (role::text = ANY (ARRAY['admin'::character varying, 'super_admin'::character varying]::text[])),
  permissions ARRAY DEFAULT '{}'::text[],
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT admin_users_pkey PRIMARY KEY (id),
  CONSTRAINT admin_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.community_cards (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title text NOT NULL,
  subtitle text,
  description text,
  link_url text,
  sort_order integer NOT NULL DEFAULT 0,
  status text NOT NULL DEFAULT 'published'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT community_cards_pkey PRIMARY KEY (id)
);
CREATE TABLE public.community_groups (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  category text DEFAULT 'General'::text,
  members integer DEFAULT 0,
  posts integer DEFAULT 0,
  recent_activity text,
  is_joined boolean DEFAULT false,
  CONSTRAINT community_groups_pkey PRIMARY KEY (id)
);
CREATE TABLE public.community_posts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  title text,
  content text NOT NULL,
  tags ARRAY NOT NULL DEFAULT '{}'::text[],
  type text NOT NULL DEFAULT 'general'::text,
  likes integer NOT NULL DEFAULT 0,
  comments integer NOT NULL DEFAULT 0,
  shares integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  comments_count integer DEFAULT 0,
  CONSTRAINT community_posts_pkey PRIMARY KEY (id),
  CONSTRAINT community_posts_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.community_replies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  content text NOT NULL,
  author_name text,
  avatar_url text,
  likes integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT community_replies_pkey PRIMARY KEY (id),
  CONSTRAINT community_replies_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.community_posts(id)
);
CREATE TABLE public.event_registrations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid,
  user_id uuid,
  student_name character varying NOT NULL,
  student_id character varying NOT NULL,
  registered_at timestamp with time zone DEFAULT now(),
  CONSTRAINT event_registrations_pkey PRIMARY KEY (id),
  CONSTRAINT event_registrations_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id),
  CONSTRAINT event_registrations_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text NOT NULL,
  event_date date NOT NULL,
  event_time time without time zone NOT NULL,
  location character varying NOT NULL,
  category character varying NOT NULL CHECK (category::text = ANY (ARRAY['academic'::character varying, 'social'::character varying, 'sports'::character varying, 'cultural'::character varying, 'workshop'::character varying]::text[])),
  organizer character varying NOT NULL,
  capacity integer,
  registration_open boolean DEFAULT true,
  image_url text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT events_pkey PRIMARY KEY (id),
  CONSTRAINT events_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.faculty (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  title text,
  department text,
  email text,
  office text,
  phone text,
  specialization ARRAY DEFAULT '{}'::text[],
  courses ARRAY DEFAULT '{}'::text[],
  education ARRAY DEFAULT '{}'::text[],
  experience text,
  profile_image text,
  rating_avg numeric DEFAULT 0,
  rating_count integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT faculty_pkey PRIMARY KEY (id)
);
CREATE TABLE public.faq_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  question character varying NOT NULL,
  answer text NOT NULL,
  category character varying NOT NULL,
  tags ARRAY DEFAULT '{}'::text[],
  is_published boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT faq_items_pkey PRIMARY KEY (id),
  CONSTRAINT faq_items_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.guidance_content (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text NOT NULL,
  content text NOT NULL,
  category character varying NOT NULL CHECK (category::text = ANY (ARRAY['academic'::character varying, 'admission'::character varying, 'campus'::character varying, 'financial'::character varying, 'policies'::character varying]::text[])),
  is_important boolean DEFAULT false,
  is_published boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT guidance_content_pkey PRIMARY KEY (id),
  CONSTRAINT guidance_content_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.help_desk_responses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ticket_id uuid,
  message text NOT NULL,
  author_name character varying NOT NULL,
  author_role character varying NOT NULL CHECK (author_role::text = ANY (ARRAY['student'::character varying, 'admin'::character varying]::text[])),
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT help_desk_responses_pkey PRIMARY KEY (id),
  CONSTRAINT help_desk_responses_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT help_desk_responses_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.help_desk_tickets(id)
);
CREATE TABLE public.help_desk_tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text NOT NULL,
  category character varying NOT NULL,
  priority character varying DEFAULT 'medium'::character varying CHECK (priority::text = ANY (ARRAY['low'::character varying, 'medium'::character varying, 'high'::character varying]::text[])),
  status character varying DEFAULT 'open'::character varying CHECK (status::text = ANY (ARRAY['open'::character varying, 'in-progress'::character varying, 'resolved'::character varying, 'closed'::character varying]::text[])),
  student_name character varying NOT NULL,
  student_id character varying NOT NULL,
  user_id uuid,
  assigned_to uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT help_desk_tickets_pkey PRIMARY KEY (id),
  CONSTRAINT help_desk_tickets_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT help_desk_tickets_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES auth.users(id)
);
CREATE TABLE public.issue_reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  description text NOT NULL,
  category text NOT NULL DEFAULT 'General'::text,
  email text,
  status text NOT NULL DEFAULT 'open'::text CHECK (status = ANY (ARRAY['open'::text, 'in_progress'::text, 'resolved'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT issue_reports_pkey PRIMARY KEY (id)
);
CREATE TABLE public.lost_found_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text NOT NULL,
  category character varying NOT NULL CHECK (category::text = ANY (ARRAY['lost'::character varying, 'found'::character varying]::text[])),
  item_type character varying NOT NULL,
  location character varying NOT NULL,
  contact_info character varying NOT NULL,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'resolved'::character varying, 'closed'::character varying]::text[])),
  image_url text,
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT lost_found_items_pkey PRIMARY KEY (id),
  CONSTRAINT lost_found_items_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.news_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  content text NOT NULL,
  category character varying NOT NULL CHECK (category::text = ANY (ARRAY['academic'::character varying, 'campus'::character varying, 'announcement'::character varying, 'achievement'::character varying]::text[])),
  is_important boolean DEFAULT false,
  image_url text,
  author_id uuid,
  published_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT news_items_pkey PRIMARY KEY (id),
  CONSTRAINT news_items_author_id_fkey FOREIGN KEY (author_id) REFERENCES auth.users(id)
);
CREATE TABLE public.past_papers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text,
  course_code text,
  exam_type text,
  semester text,
  year integer,
  tags ARRAY DEFAULT '{}'::text[],
  download_url text,
  file_url text,
  department text,
  status text NOT NULL DEFAULT 'pending'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT past_papers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.post_likes (
  post_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT post_likes_pkey PRIMARY KEY (post_id, user_id),
  CONSTRAINT post_likes_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.community_posts(id),
  CONSTRAINT post_likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.resources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  description text,
  department text,
  term text,
  external_url text,
  file_url text,
  size_bytes bigint,
  mime_type text,
  storage_path text,
  uploaded_at timestamp with time zone DEFAULT now(),
  CONSTRAINT resources_pkey PRIMARY KEY (id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  faculty_id uuid NOT NULL,
  student_name text,
  course text NOT NULL,
  semester text NOT NULL,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  teaching_quality integer NOT NULL CHECK (teaching_quality >= 1 AND teaching_quality <= 5),
  accessibility integer NOT NULL CHECK (accessibility >= 1 AND accessibility <= 5),
  course_material integer NOT NULL CHECK (course_material >= 1 AND course_material <= 5),
  grading integer NOT NULL CHECK (grading >= 1 AND grading <= 5),
  comment text NOT NULL,
  pros ARRAY NOT NULL DEFAULT '{}'::text[],
  cons ARRAY NOT NULL DEFAULT '{}'::text[],
  would_recommend boolean NOT NULL DEFAULT false,
  is_anonymous boolean NOT NULL DEFAULT false,
  helpful integer NOT NULL DEFAULT 0,
  reported integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  status text NOT NULL DEFAULT 'approved'::text,
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT reviews_faculty_id_fkey FOREIGN KEY (faculty_id) REFERENCES public.faculty(id)
);
CREATE TABLE public.site_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  site_name character varying DEFAULT 'COMSATS ITE App'::character varying,
  site_description text DEFAULT 'Student portal for COMSATS University'::text,
  site_logo_url text,
  contact_email character varying DEFAULT 'admin@comsats.edu.pk'::character varying,
  maintenance_mode boolean DEFAULT false,
  registration_enabled boolean DEFAULT true,
  max_file_size_mb integer DEFAULT 10,
  allowed_file_types ARRAY DEFAULT ARRAY['pdf'::text, 'doc'::text, 'docx'::text, 'jpg'::text, 'png'::text],
  theme_color character varying DEFAULT '#3b82f6'::character varying,
  announcement_text text,
  announcement_enabled boolean DEFAULT false,
  social_links jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT site_settings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.support_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying,
  email character varying,
  category character varying NOT NULL,
  message text NOT NULL,
  is_anonymous boolean DEFAULT false,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'in-progress'::character varying, 'resolved'::character varying]::text[])),
  user_id uuid,
  assigned_to uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT support_requests_pkey PRIMARY KEY (id),
  CONSTRAINT support_requests_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES auth.users(id),
  CONSTRAINT support_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.support_resources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text NOT NULL,
  category character varying NOT NULL CHECK (category::text = ANY (ARRAY['mental-health'::character varying, 'academic'::character varying, 'financial'::character varying, 'career'::character varying, 'personal'::character varying]::text[])),
  contact_info character varying NOT NULL,
  availability character varying NOT NULL,
  is_emergency boolean DEFAULT false,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT support_resources_pkey PRIMARY KEY (id),
  CONSTRAINT support_resources_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.test (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message text NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT test_pkey PRIMARY KEY (id)
);
CREATE TABLE public.timetable (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  course_code character varying NOT NULL,
  course_title character varying NOT NULL,
  section character varying NOT NULL,
  day character varying NOT NULL,
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  room character varying,
  teacher_name character varying,
  department character varying,
  semester character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT timetable_pkey PRIMARY KEY (id)
);
CREATE TABLE public.timetable_docs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  department text NOT NULL,
  term text NOT NULL,
  size_bytes bigint NOT NULL,
  mime_type text NOT NULL,
  storage_path text NOT NULL,
  public_url text NOT NULL,
  uploaded_at timestamp with time zone DEFAULT now(),
  CONSTRAINT timetable_docs_pkey PRIMARY KEY (id)
);